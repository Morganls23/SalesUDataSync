#
# This dsconfig batch file shows an example configuration used
# to build a one-way sync relationship between PingDirectory and
# PingOne For Customers. All values surrounded by square brackets
# must be replaced before the batch file can be used.
#

# Create External Server for Source
dsconfig create-external-server \
  --server-name pingdirectory \
  --type ping-identity-ds \
  --set server-host-name:pingdirectory \
  --set location:${LOCATION} \
  --set bind-dn:cn=sync \
  --set "password:AABkwRkIRfApR+R1uZPSciaUPmtEtTzjC/4=" \
  --set initial-connections:1 \
  --set max-connections:4

# Define Sync Source and Destination
dsconfig create-sync-source \
    --source-name pingdirectory_source  \
    --type ping-identity  \
    --set base-dn:ou=source,${USER_BASE_DN}  \
    --set server:pingdirectory

dsconfig create-sync-destination \
    --destination-name PingOne \
    --type ping-one-customer \
    --set api-url:https://api.pingone.com/v1 \
    --set auth-url:https://auth.pingone.com/${PING_ONE_ENV_ID}/as/token \
    --set environment-id:${PING_ONE_ENV_ID} \
    --set oauth-client-id:${PING_ONE_OAUTH_CLIENT_ID} \
    --set oauth-client-secret:${PING_ONE_OAUTH_CLIENT_SECRET}

# Create A Sync Pipe
dsconfig create-sync-pipe \
    --pipe-name PingDirectory_to_PingOne \
    --set 'retry-backoff-increase-by:100 ms' \
    --set sync-destination:PingOne \
    --set sync-source:pingdirectory_source


# Define Attribute mappings
# PingOne For Customers has a fixed schema. In order to successfully
# sync users from a Sync Source it is necessary to provide values for the
# following attributes:
# 1. "name": A JSON object in the form {"name": {"givenName": "John", "familyName": "Doe", "middleName": "M"}}
# 2. "email": A JSON string that must be a valid email address AND be UNIQUE in a PingOne Environment. This value is required on creates.
# 3. "userName": A JSON string that must be UNIQUE in a PingOne Environment. This value is required on creates.
# 4. "population": A JSON object in the form {"id": "population-id"}. This value is required on creates.
# 5. "phone": A JSON string in the form "555-555-5555"
#
# If values are provided for fields not listed here it may result in errors
# during synchronization.

dsconfig create-attribute-map \
    --map-name PingDirectory_to_PingOne_User_Map

dsconfig create-attribute-mapping \
    --map-name PingDirectory_to_PingOne_User_Map \
    --mapping-name resourceType \
    --type constructed \
    --set value-pattern:user

dsconfig create-attribute-mapping \
    --map-name PingDirectory_to_PingOne_User_Map \
    --mapping-name externalId \
    --type direct \
    --set from-attribute:entryUUID

dsconfig create-attribute-mapping \
    --map-name PingDirectory_to_PingOne_User_Map \
    --mapping-name username \
    --type constructed \
    --set value-pattern:{givenname}.{sn}

dsconfig create-attribute-mapping \
    --map-name PingDirectory_to_PingOne_User_Map \
    --mapping-name password \
    --type direct \
    --set from-attribute:userPassword

dsconfig create-attribute-mapping \
    --map-name PingDirectory_to_PingOne_User_Map \
    --mapping-name email \
    --type constructed \
    --set value-pattern:{givenname}.{sn}@example.com

# When using an Attribute Mapping to control a user's Population it is
# necessary to define population as a JSON Attribute. See the comment below
# attached to the JSON Attribute definition.
dsconfig create-attribute-mapping \
    --map-name PingDirectory_to_PingOne_User_Map \
    --mapping-name population \
    --type constructed \
    --set 'value-pattern:{"id":"${POPULATION_ID}"}}'

dsconfig create-attribute-mapping \
    --map-name PingDirectory_to_PingOne_User_Map \
    --mapping-name primaryPhone \
    --type direct \
    --set from-attribute:telephoneNumber

dsconfig create-attribute-mapping \
    --map-name PingDirectory_to_PingOne_User_Map \
    --mapping-name name \
    --type json

dsconfig create-json-attribute-mapping-field \
    --map-name PingDirectory_to_PingOne_User_Map \
    --mapping-name name \
    --field-name formatted \
    --set from-attribute:cn \
    --set json-type:string

dsconfig create-json-attribute-mapping-field \
    --map-name PingDirectory_to_PingOne_User_Map \
    --mapping-name name \
    --field-name given \
    --set from-attribute:givenName \
    --set json-type:string

dsconfig create-json-attribute-mapping-field \
    --map-name PingDirectory_to_PingOne_User_Map \
    --mapping-name name \
    --field-name family \
    --set from-attribute:sn \
    --set json-type:string

# Create a Sync Class and associate the defined Attribute Map
dsconfig create-sync-class \
    --pipe-name PingDirectory_to_PingOne \
    --class-name "PingDirectory_to_PingOne User Sync Class" \
    --set allow-destination-renames:false \
    --set attribute-map:PingDirectory_to_PingOne_User_Map \
    --set auto-mapped-source-attribute:-none- \
    --set destination-correlation-attributes:externalId \
    --set destination-correlation-attributes:username \
    --set destination-correlation-attributes:email \
    --set destination-create-only-attribute:resourceType \
    --set creates-as-modifies:true \
    --set include-filter:(objectClass=person)

# Define JSON Attributes
dsconfig create-json-attribute \
    --pipe-name PingDirectory_to_PingOne \
    --class-name "PingDirectory_to_PingOne User Sync Class" \
    --attribute-name name

# It is important that the JSON Attribute defined for Population
# matches the manner in which you intend to refer to Populations.
# When using the Population ID, "id-field" and "include-field" should
# be set to "id". When using the Population Name, "id-field" and
# "include-field" should be set to "name". This example assumes that you
# are using the Population names in your Attribute Mappings for Population.
dsconfig create-json-attribute \
    --pipe-name PingDirectory_to_PingOne \
    --class-name "PingDirectory_to_PingOne User Sync Class" \
    --attribute-name population \
    --set id-field:id \
    --set include-field:id

# Setup Debug Targets for added logging
#dsconfig create-debug-target \
#    --publisher-name "File-Based Debug Logger" \
#    --target-name com.unboundid.directory.sync.pingone.PingOneCustomerSyncDestination \
#    --set debug-level:verbose

# This will log all of the raw HTTP traffic between PingOne and DataSync,
# which can include sensitive information like user passwords and
# authentication tokens. DO NOT leave on in a Production environment.
#dsconfig create-debug-target \
#    --publisher-name "File-Based Debug Logger" \
#    --target-name com.unboundid.directory.sync.pingone.HTTPTrafficLogger \
#    --set debug-level:verbose


#### RESYNC ####
# This is an example of running resync. If resync is being run against an
# instance that has already been loaded with users, it is recommended that
# the password attribute be added to the list of ignored destination attributes.
#
resync --pipe-name PingDirectory_to_PingOne --excludeDestinationAttr password
